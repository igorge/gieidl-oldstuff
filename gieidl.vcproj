<?xml version="1.0" encoding="windows-1251"?>
<VisualStudioProject
	ProjectType="Visual C++"
	Version="7.10"
	Name="gieidl"
	ProjectGUID="{4CC86C13-4602-4317-9564-82EE642A5772}"
	RootNamespace="gieidl"
	Keyword="Win32Proj">
	<Platforms>
		<Platform
			Name="Win32"/>
	</Platforms>
	<Configurations>
		<Configuration
			Name="Debug|Win32"
			OutputDirectory="Debug"
			IntermediateDirectory="Debug"
			ConfigurationType="1"
			CharacterSet="2">
			<Tool
				Name="VCCLCompilerTool"
				Optimization="0"
				AdditionalIncludeDirectories="&quot;$(GIE_LIB)&quot;;&quot;$(BOOST_LIB)\include\boost-1_32&quot;;&quot;$(ANTLR_INCLUDE)&quot;"
				PreprocessorDefinitions="WIN32;_DEBUG;_CONSOLE"
				StringPooling="FALSE"
				MinimalRebuild="TRUE"
				BasicRuntimeChecks="3"
				SmallerTypeCheck="TRUE"
				RuntimeLibrary="1"
				BufferSecurityCheck="TRUE"
				EnableFunctionLevelLinking="TRUE"
				ForceConformanceInForLoopScope="TRUE"
				RuntimeTypeInfo="TRUE"
				UsePrecompiledHeader="3"
				WarningLevel="3"
				Detect64BitPortabilityProblems="TRUE"
				DebugInformationFormat="4"/>
			<Tool
				Name="VCCustomBuildTool"/>
			<Tool
				Name="VCLinkerTool"
				AdditionalDependencies="antlr.lib"
				OutputFile="$(OutDir)/gieidl.exe"
				LinkIncremental="2"
				AdditionalLibraryDirectories="&quot;$(BOOST_LIB)\lib&quot;;&quot;$(ANTLR_LIB)\$(ConfigurationName)&quot;"
				GenerateDebugInformation="TRUE"
				ProgramDatabaseFile="$(OutDir)/gieidl.pdb"
				SubSystem="1"
				TargetMachine="1"/>
			<Tool
				Name="VCMIDLTool"/>
			<Tool
				Name="VCPostBuildEventTool"/>
			<Tool
				Name="VCPreBuildEventTool"/>
			<Tool
				Name="VCPreLinkEventTool"/>
			<Tool
				Name="VCResourceCompilerTool"/>
			<Tool
				Name="VCWebServiceProxyGeneratorTool"/>
			<Tool
				Name="VCXMLDataGeneratorTool"/>
			<Tool
				Name="VCWebDeploymentTool"/>
			<Tool
				Name="VCManagedWrapperGeneratorTool"/>
			<Tool
				Name="VCAuxiliaryManagedWrapperGeneratorTool"/>
		</Configuration>
		<Configuration
			Name="Release|Win32"
			OutputDirectory="Release"
			IntermediateDirectory="Release"
			ConfigurationType="1"
			CharacterSet="2">
			<Tool
				Name="VCCLCompilerTool"
				AdditionalOptions="/GL"
				Optimization="3"
				GlobalOptimizations="TRUE"
				InlineFunctionExpansion="2"
				EnableIntrinsicFunctions="TRUE"
				FavorSizeOrSpeed="1"
				OmitFramePointers="TRUE"
				OptimizeForProcessor="2"
				AdditionalIncludeDirectories="&quot;$(GIE_LIB)&quot;;&quot;$(BOOST_LIB)\include\boost-1_32&quot;;&quot;$(ANTLR_INCLUDE)&quot;"
				PreprocessorDefinitions="WIN32;NDEBUG;_CONSOLE"
				StringPooling="TRUE"
				RuntimeLibrary="0"
				BufferSecurityCheck="FALSE"
				EnableEnhancedInstructionSet="1"
				ForceConformanceInForLoopScope="TRUE"
				RuntimeTypeInfo="FALSE"
				UsePrecompiledHeader="3"
				WarningLevel="3"
				Detect64BitPortabilityProblems="TRUE"
				DebugInformationFormat="3"/>
			<Tool
				Name="VCCustomBuildTool"/>
			<Tool
				Name="VCLinkerTool"
				AdditionalOptions="/LTCG"
				AdditionalDependencies="antlr.lib"
				OutputFile="$(OutDir)/gieidl.exe"
				LinkIncremental="1"
				AdditionalLibraryDirectories="&quot;$(BOOST_LIB)\lib&quot;;&quot;$(ANTLR_LIB)\$(ConfigurationName)&quot;"
				GenerateDebugInformation="TRUE"
				SubSystem="1"
				OptimizeReferences="2"
				EnableCOMDATFolding="2"
				SetChecksum="TRUE"
				TargetMachine="1"/>
			<Tool
				Name="VCMIDLTool"/>
			<Tool
				Name="VCPostBuildEventTool"/>
			<Tool
				Name="VCPreBuildEventTool"/>
			<Tool
				Name="VCPreLinkEventTool"/>
			<Tool
				Name="VCResourceCompilerTool"/>
			<Tool
				Name="VCWebServiceProxyGeneratorTool"/>
			<Tool
				Name="VCXMLDataGeneratorTool"/>
			<Tool
				Name="VCWebDeploymentTool"/>
			<Tool
				Name="VCManagedWrapperGeneratorTool"/>
			<Tool
				Name="VCAuxiliaryManagedWrapperGeneratorTool"/>
		</Configuration>
	</Configurations>
	<References>
	</References>
	<Files>
		<Filter
			Name="Resource Files"
			Filter="rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx"
			UniqueIdentifier="{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}">
		</Filter>
		<Filter
			Name="main"
			Filter="">
			<File
				RelativePath=".\gieidl.cpp">
			</File>
			<File
				RelativePath=".\gieidl.guids.cpp">
			</File>
			<File
				RelativePath=".\ReadMe.txt">
			</File>
			<File
				RelativePath=".\stdafx.cpp">
				<FileConfiguration
					Name="Debug|Win32">
					<Tool
						Name="VCCLCompilerTool"
						UsePrecompiledHeader="1"/>
				</FileConfiguration>
				<FileConfiguration
					Name="Release|Win32">
					<Tool
						Name="VCCLCompilerTool"
						UsePrecompiledHeader="1"/>
				</FileConfiguration>
			</File>
			<File
				RelativePath=".\stdafx.h">
			</File>
			<File
				RelativePath=".\todo.txt">
			</File>
			<Filter
				Name="trace"
				Filter="">
				<File
					RelativePath=".\trace\gie_idl_trace.h">
				</File>
			</Filter>
		</Filter>
		<Filter
			Name="grammar"
			Filter="">
			<File
				RelativePath=".\grammar\gieidl_lexer.g">
				<FileConfiguration
					Name="Debug|Win32">
					<Tool
						Name="VCCustomBuildTool"
						CommandLine="cd $(InputDir)generated
$(ANTLR) &quot;$(InputPath)&quot;
"
						Outputs="$(InputDir)\generated\$(InputName).cpp;$(InputDir)\generated\$(InputName).hpp;$(InputDir)\generated\$(InputName)TokenTypes.hpp;$(InputDir)\generated\$(InputName)TokenTypes.txt"/>
				</FileConfiguration>
				<FileConfiguration
					Name="Release|Win32">
					<Tool
						Name="VCCustomBuildTool"
						CommandLine="cd $(InputDir)generated
$(ANTLR) &quot;$(InputPath)&quot;
"
						Outputs="$(InputDir)\generated\$(InputName).cpp;$(InputDir)\generated\$(InputName).hpp;$(InputDir)\generated\$(InputName)TokenTypes.hpp;$(InputDir)\generated\$(InputName)TokenTypes.txt"/>
				</FileConfiguration>
			</File>
			<File
				RelativePath=".\grammar\gieidl_parser.g">
				<FileConfiguration
					Name="Debug|Win32">
					<Tool
						Name="VCCustomBuildTool"
						CommandLine="cd $(InputDir)generated
$(ANTLR) &quot;$(InputPath)&quot;
"
						AdditionalDependencies="$(InputDir)\generated\gieidl_lexerTokenTypes.txt"
						Outputs="$(InputDir)\generated\$(InputName).cpp;$(InputDir)\generated\$(InputName).hpp;$(InputDir)\generated\$(InputName)TokenTypes.hpp;$(InputDir)\generated\$(InputName)TokenTypes.txt"/>
				</FileConfiguration>
				<FileConfiguration
					Name="Release|Win32">
					<Tool
						Name="VCCustomBuildTool"
						CommandLine="cd $(InputDir)generated
$(ANTLR) &quot;$(InputPath)&quot;
"
						AdditionalDependencies="$(InputDir)\generated\gieidl_lexerTokenTypes.txt"
						Outputs="$(InputDir)\generated\$(InputName).cpp;$(InputDir)\generated\$(InputName).hpp;$(InputDir)\generated\$(InputName)TokenTypes.hpp;$(InputDir)\generated\$(InputName)TokenTypes.txt"/>
				</FileConfiguration>
			</File>
			<Filter
				Name="generated"
				Filter="">
				<File
					RelativePath=".\grammar\generated\gieidl_lexer.cpp">
				</File>
				<File
					RelativePath=".\grammar\generated\gieidl_lexer.hpp">
				</File>
				<File
					RelativePath=".\grammar\generated\gieidl_lexerTokenTypes.hpp">
				</File>
				<File
					RelativePath=".\grammar\generated\gieidl_lexerTokenTypes.txt">
				</File>
				<File
					RelativePath=".\grammar\generated\gieidl_parser.cpp">
				</File>
				<File
					RelativePath=".\grammar\generated\gieidl_parser.hpp">
				</File>
				<File
					RelativePath=".\grammar\generated\gieidl_parserTokenTypes.hpp">
				</File>
				<File
					RelativePath=".\grammar\generated\gieidl_parserTokenTypes.txt">
				</File>
			</Filter>
			<Filter
				Name="test"
				Filter="">
				<File
					RelativePath=".\test\abc_codec.idl_">
				</File>
				<File
					RelativePath=".\test1.gieidl">
				</File>
				<File
					RelativePath=".\test2.gieidl">
				</File>
				<File
					RelativePath=".\test3.gieidl">
				</File>
			</Filter>
			<Filter
				Name=".helpers"
				Filter="">
				<File
					RelativePath=".\grammar.helpers\parser.helper.function.h">
				</File>
				<File
					RelativePath=".\grammar.helpers\parser.helper.h">
				</File>
			</Filter>
		</Filter>
		<Filter
			Name="tree_helpers"
			Filter="">
			<File
				RelativePath=".\tree_helpers\line_information.h">
			</File>
		</Filter>
		<Filter
			Name="idl_compil"
			Filter="">
			<File
				RelativePath=".\idl_compil\idl_compil.cpp">
			</File>
			<File
				RelativePath=".\idl_compil\idl_compil.err.h">
			</File>
			<File
				RelativePath=".\idl_compil\idl_compil.guid.h">
			</File>
			<File
				RelativePath=".\idl_compil\idl_compil.h">
			</File>
			<File
				RelativePath=".\idl_compil\idl_countable_string.h">
			</File>
			<File
				RelativePath=".\idl_compil\idl_token.h">
			</File>
			<Filter
				Name="semantic"
				Filter="">
				<File
					RelativePath=".\idl_compil\semantic.access.h">
				</File>
				<File
					RelativePath=".\idl_compil\semantic.builder.cpp">
				</File>
				<File
					RelativePath=".\idl_compil\semantic.builder.h">
				</File>
				<File
					RelativePath=".\idl_compil\semantic.builder.helper.access2string.h">
				</File>
				<File
					RelativePath=".\idl_compil\semantic.builder.helper.bridge.h">
				</File>
				<File
					RelativePath=".\idl_compil\semantic.builder.interfaces.h">
				</File>
				<File
					RelativePath=".\idl_compil\semantic.h">
				</File>
				<File
					RelativePath=".\idl_compil\semantic.helpers.aggregate_filtering_enumerator.h">
				</File>
				<File
					RelativePath=".\idl_compil\semantic.helpers.cpp">
				</File>
				<File
					RelativePath=".\idl_compil\semantic.helpers.get_node_attr_repo.h">
				</File>
				<File
					RelativePath=".\idl_compil\semantic.helpers.get_node_if_proxy.h">
				</File>
				<File
					RelativePath=".\idl_compil\semantic.helpers.get_node_name.h">
				</File>
				<File
					RelativePath=".\idl_compil\semantic.helpers.get_node_path_as_string.h">
				</File>
				<File
					RelativePath=".\idl_compil\semantic.helpers.get_parent.h">
				</File>
				<File
					RelativePath=".\idl_compil\semantic.helpers.h">
				</File>
				<File
					RelativePath=".\idl_compil\semantic.helpers.id2string.h">
				</File>
				<File
					RelativePath=".\idl_compil\semantic.helpers.node_enumerators.h">
				</File>
				<File
					RelativePath=".\idl_compil\semantic.helpers.node_type2string.h">
				</File>
				<File
					RelativePath=".\idl_compil\semantic.helpers.rebind.h">
				</File>
				<File
					RelativePath=".\idl_compil\semantic.nodes.aggregate.cpp">
				</File>
				<File
					RelativePath=".\idl_compil\semantic.nodes.aggregate.interfaces.h">
				</File>
				<File
					RelativePath=".\idl_compil\semantic.nodes.fq_id.h">
				</File>
				<File
					RelativePath=".\idl_compil\semantic.nodes.h">
				</File>
				<File
					RelativePath=".\idl_compil\semantic.nodes.impl.compound.dep_resolver.h">
				</File>
				<File
					RelativePath=".\idl_compil\semantic.nodes.impl.h">
				</File>
				<File
					RelativePath=".\idl_compil\semantic.nodes.late_bound.cpp">
				</File>
				<File
					RelativePath=".\idl_compil\semantic.nodes.late_bound.interfaces.h">
				</File>
				<File
					RelativePath=".\idl_compil\semantic.nodes.multi_symbol.cpp">
				</File>
				<File
					RelativePath=".\idl_compil\semantic.nodes.namespace.cpp">
				</File>
				<File
					RelativePath=".\idl_compil\semantic.nodes.semantic_tree_holder.interfaces.h">
				</File>
				<File
					RelativePath=".\idl_compil\semantic.nodes.var_decl.cpp">
				</File>
				<File
					RelativePath=".\idl_compil\semantic.required_symbols.interfaces.h">
				</File>
				<File
					RelativePath=".\idl_compil\semantic.tree.core.interfaces.h">
				</File>
				<File
					RelativePath=".\idl_compil\semantic.tree.interfaces.h">
				</File>
				<File
					RelativePath=".\idl_compil\semantic.tree_holder.cpp">
				</File>
				<File
					RelativePath=".\idl_compil\semantic.var_decl.interfaces.h">
				</File>
				<Filter
					Name="guid_map"
					Filter="">
					<File
						RelativePath=".\idl_compil\guid_map.cpp">
					</File>
					<File
						RelativePath=".\idl_compil\guid_map.factory.h">
					</File>
					<File
						RelativePath=".\idl_compil\guid_map.interfaces.h">
					</File>
				</Filter>
				<Filter
					Name="attributes"
					Filter="">
					<File
						RelativePath=".\idl_compil\semantic.attributes.cpp">
					</File>
					<File
						RelativePath=".\idl_compil\semantic.attributes.h">
					</File>
					<File
						RelativePath=".\idl_compil\semantic.attributes.interfaces.h">
					</File>
				</Filter>
				<Filter
					Name="semantic.nodes.impl"
					Filter="">
					<File
						RelativePath=".\idl_compil\semantic.nodes.impl\attribute_repository_holder.impl.h">
					</File>
				</Filter>
				<Filter
					Name="visitors"
					Filter="">
					<File
						RelativePath=".\idl_compil\visitors\semantic.nodes.dispatch.h">
					</File>
					<File
						RelativePath=".\test.cpp">
						<FileConfiguration
							Name="Debug|Win32">
							<Tool
								Name="VCCLCompilerTool"
								GeneratePreprocessedFile="0"/>
						</FileConfiguration>
					</File>
				</Filter>
				<Filter
					Name="type_info"
					Filter="">
					<File
						RelativePath=".\idl_compil\type_info\semantic.nodes.base_type.cpp">
					</File>
					<File
						RelativePath=".\idl_compil\type_info\semantic.nodes.pointer_to.cpp">
					</File>
					<File
						RelativePath=".\idl_compil\type_info\semantic.nodes.reference_to.cpp">
					</File>
					<File
						RelativePath=".\idl_compil\type_info\semantic.nodes.type_descriptor.cpp">
					</File>
					<File
						RelativePath=".\idl_compil\type_info\semantic.nodes.type_descriptor_builder_i.impl.h">
					</File>
					<File
						RelativePath=".\idl_compil\type_info\semantic.type_info.factory.h">
					</File>
					<File
						RelativePath=".\idl_compil\type_info\semantic.type_info.guids.cpp">
					</File>
					<File
						RelativePath=".\idl_compil\type_info\semantic.type_info.interfaces.h">
					</File>
					<File
						RelativePath=".\doc\type_node_struct.txt">
					</File>
				</Filter>
				<Filter
					Name="function"
					Filter="">
					<File
						RelativePath=".\idl_compil\semantic.nodes.function\semantic.nodes.fucntion.attributes.cpp">
					</File>
					<File
						RelativePath=".\idl_compil\semantic.nodes.function\semantic.nodes.fucntion.cpp">
					</File>
					<File
						RelativePath=".\idl_compil\semantic.nodes.function\semantic.nodes.fucntion.factory.h">
					</File>
					<File
						RelativePath=".\idl_compil\semantic.nodes.function\semantic.nodes.fucntion.interfaces.cpp">
					</File>
					<File
						RelativePath=".\idl_compil\semantic.nodes.function\semantic.nodes.fucntion.interfaces.h">
					</File>
					<File
						RelativePath=".\idl_compil\semantic.nodes.function\semantic.nodes.fucntion.specifiers.h">
					</File>
					<File
						RelativePath=".\idl_compil\semantic.nodes.function\semantic.nodes.fucntion_params.cpp">
					</File>
				</Filter>
			</Filter>
			<Filter
				Name="symbol_locators"
				Filter="">
				<File
					RelativePath=".\idl_compil\symbol_locators\ambiguity_resolver.adapter.h">
				</File>
				<File
					RelativePath=".\idl_compil\symbol_locators\ambiguity_resolver.cpp.cpp">
				</File>
				<File
					RelativePath=".\idl_compil\symbol_locators\symloc.cpp.cpp">
				</File>
				<File
					RelativePath=".\idl_compil\symbol_locators\symloc.factory.h">
				</File>
				<File
					RelativePath=".\idl_compil\symbol_locators\symloc.guids.cpp">
				</File>
				<File
					RelativePath=".\idl_compil\symbol_locators\symloc.interfaces.h">
				</File>
			</Filter>
			<Filter
				Name="comparable"
				Filter="">
				<File
					RelativePath=".\idl_compil\comparable\comparable.h">
				</File>
				<File
					RelativePath=".\idl_compil\comparable\comparable.interfaces.cpp">
				</File>
				<File
					RelativePath=".\idl_compil\comparable\comparable.interfaces.h">
				</File>
			</Filter>
		</Filter>
		<Filter
			Name="utility"
			Filter="">
			<File
				RelativePath=".\idl_compil\utility.bool2string.h">
			</File>
			<File
				RelativePath=".\idl_compil\utility.countable.h">
			</File>
		</Filter>
		<Filter
			Name="idl_backend"
			Filter="">
			<File
				RelativePath=".\idl_backend\idl_backend.frame.h">
			</File>
			<File
				RelativePath=".\idl_backend\idl_backend.frame.helpres.enumerators.h">
			</File>
			<File
				RelativePath=".\idl_backend\idl_backend.frame.helpres.h">
			</File>
			<File
				RelativePath=".\idl_backend\idl_backend.frame.interfaces.cpp">
			</File>
			<File
				RelativePath=".\idl_backend\idl_backend.frame.interfaces.h">
			</File>
			<File
				RelativePath=".\idl_backend\idl_backend.h">
			</File>
			<File
				RelativePath=".\idl_backend\idl_backend.manager.cpp">
			</File>
			<File
				RelativePath=".\idl_backend\idl_backend.manager.h">
			</File>
			<File
				RelativePath=".\idl_backend\ild_backend.metainfo.h">
			</File>
			<Filter
				Name="backends"
				Filter="">
				<Filter
					Name="dumper"
					Filter="">
					<File
						RelativePath=".\idl_backend\backends\dumper\dumper.cpp">
					</File>
				</Filter>
			</Filter>
		</Filter>
		<Filter
			Name="idl_param"
			Filter="">
			<File
				RelativePath=".\idl_param\param.core.cpp">
			</File>
			<File
				RelativePath=".\idl_param\param.core.h">
			</File>
			<File
				RelativePath=".\idl_param\param.validator.h">
			</File>
		</Filter>
	</Files>
	<Globals>
	</Globals>
</VisualStudioProject>
